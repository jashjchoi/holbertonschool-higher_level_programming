======================
The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

This is a text file to test the 0-add_integer module.  First import
``0-add_integer`` from the ``add_integer`` module:

>>> add_integer = __import__('0-add_integer').add_integer


Now use it with:

Basic usage: 

>>> add_integer(1, 2)
3

>>> add_integer(100, -2)
98

>>> add_integer(2)
100

>>> add_integer(100.3, -2)
98

>>> add_integer(1000.3)
1098

Adding 2 float numbers:
    >>> add_integer(2.5, 2.5)
    5

Testing string input1:
    >>> add_integer("Hello", 4)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Testing string input2:
    >>> add_integer(4, "World")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Not an int or float:
    >>> add_integer("4", "10")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Single string input:
    >>> add_integer("HelloWorld")
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

None Argument: 
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer


More than 2 args:
    >>> add_integer(1, 2, 3)
    Traceback (most recent call last):
    ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

List and number:
    >>> add_integer([5], 2)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Empty input:
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

None argument:
    >>> add_integer(None)
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

Adding a tuple
    >>> add_integer((4, 10))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Number and list
    >>> add_integer(100, [])
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer
