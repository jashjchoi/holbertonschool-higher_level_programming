======================
The ``5-text_indentation`` module
======================

Using ``text_indentation``
-------------------

This is a text file to test the 5-text_indentation module.  First import
``5-text_indentation`` from the ``text_indentation`` module:

>>> text_indentation = __import__('5-text_indentation').text_indentation

Now use it with:


Basic usage:
    >>> text_indentation("""Lorem ipsum dolor sit amet, consectetur adipiscing elit. \
    ... Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? \
    ... Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: \
    ... Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. \
    ... Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum \
    ... rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo \
    ... stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum \
    ... cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio \
    ... beatiorem! Iam ruinas videres""")
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
    <BLANKLINE>
    Quonam modo?
    <BLANKLINE>
    Utrum igitur tibi litteram videor an totas paginas commovere?
    <BLANKLINE>
    Non autem hoc:
    <BLANKLINE>
    igitur ne illud quidem.
    <BLANKLINE>
    Fortasse id optimum, sed ubi illud:
    <BLANKLINE>
    Plus semper voluptatis?
    <BLANKLINE>
    Teneo, inquit, finem illi videri nihil dolere.
    <BLANKLINE>
    Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
    <BLANKLINE>
    Si id dicis, vicimus.
    <BLANKLINE>
    Inde sermone vario sex illa a Dipylo stadia confecimus.
    <BLANKLINE>
    Sin aliud quid voles, postea.
    <BLANKLINE>
    Quae animi affectio suum cuique tribuens atque hanc, quam dico.
    <BLANKLINE>
    Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

Non-string input:
    >>> text_indentation(5)
    Traceback (most recent call last):
    ...
    TypeError: text must be a string

Float input:
    >>> text_indentation(4.321)
    Traceback (most recent call last):
    ...
    TypeError: text must be a string

Boolean arugment
    >>> text_indentation(True)
    Traceback (most recent call last):
    ...
    TypeError: text must be a string

Tuple:
    >>> text_indentation((1, 2, 3))
    Traceback (most recent call last):
    ...
    TypeError: text must be a string

No special char in string input:
    >>> text_indentation("helloworld")
    helloworld

No input:
    >>> text_indentation()
    Traceback (most recent call last):
    ...
    TypeError: text_indentation() missing 1 required positional argument: 'text'

Another test case:
    >>> text_indentation("Hello. World? This is: Python")
    Hello.
    <BLANKLINE>
    World?
    <BLANKLINE>
    This is:
    <BLANKLINE>
    Python

List of strings (incorrect type input)
    >>> text_indentation(["Hello", ".", "World", "?", "Python", ":"])
    Traceback (most recent call last):
    ...
    TypeError: text must be a string

None argument:
    >>> text_indentation(None)
    Traceback (most recent call last):
    ...
    TypeError: text must be a string

>>> text_indentation("Here's the trailing whitespace:              \
What would happen if this question mark ? exists on the second line? \
Let us check this period(.)                     works too.")

Here's the trailing whitespace:
<BLANKLINE>
What would happen if this question mark ?
<BLANKLINE>
exists on the second line?
<BLANKLINE>
Let us check this period(.
<BLANKLINE>
)                     works too.
<BLANKLINE>

>>> text_indentation("         This text starts with the trailing whitespace:              \
What would happen if this question mark ? exists on the second line? \
Let us check this period(.) works too.")
This text starts with the trailing whitespace:
<BLANKLINE>
What would happen if this question mark ?
<BLANKLINE>
exists on the second line?
<BLANKLINE>
Let us check this period(.
<BLANKLINE>
) works too.
<BLANKLINE>
